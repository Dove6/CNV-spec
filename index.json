{
  "api/Inertia.INERTIA.html": {
    "href": "api/Inertia.INERTIA.html",
    "title": "Class INERTIA | Cnv API specification",
    "keywords": "Class INERTIA Namespace Inertia Assembly Inertia.dll 2D physics simulation. INERTIA : OBJECT Inheritance object OBJECT INERTIA Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ADDFORCE(int, double, double) void ADDFORCE(int id, double x, double y) Parameters id int x double y double CREATESPHERE(double, double, double, double) int CREATESPHERE(double _1, double _2, double _3, double _4) Parameters _1 double _2 double _3 double _4 double Returns int DELETEBODY(int) void DELETEBODY(int id) Parameters id int GETPOSITIONX(int) double GETPOSITIONX(int id) Parameters id int Returns double GETPOSITIONY(int) double GETPOSITIONY(int id) Parameters id int Returns double GETSPEED(int) double GETSPEED(int id) Parameters id int Returns double LINK(int, string, bool, bool) void LINK(int id, string object_name, bool _1, bool _2) Parameters id int object_name string _1 bool _2 bool LOAD(string) void LOAD(string filename) Parameters filename string RESETTIMER() void RESETTIMER() SETGRAVITY(double, double) void SETGRAVITY(double x, double y) Parameters x double y double SETLINEARDAMPING(double, double) void SETLINEARDAMPING(double x, double y) Parameters x double y double SETMATERIAL(int, string) void SETMATERIAL(int id, string material_name) Parameters id int material_name string SETPOSITION(int, double, double) void SETPOSITION(int id, double x, double y) Parameters id int x double y double SETVELOCITY(int, double, double) void SETVELOCITY(int id, double x, double y) Parameters id int x double y double TICK() void TICK() UNLINK(int) void UNLINK(int id) Parameters id int"
  },
  "api/Inertia.html": {
    "href": "api/Inertia.html",
    "title": "Namespace Inertia | Cnv API specification",
    "keywords": "Namespace Inertia Classes INERTIA 2D physics simulation."
  },
  "api/Matrix.MATRIX.html": {
    "href": "api/Matrix.MATRIX.html",
    "title": "Class MATRIX | Cnv API specification",
    "keywords": "Class MATRIX Namespace Matrix Assembly Matrix.dll 2D Boulder Dash-like simulation. MATRIX : OBJECT Inheritance object OBJECT MATRIX Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BASEPOS (int, int) BASEPOS { init; } Property Value (int, int) CELLHEIGHT int CELLHEIGHT { init; } Property Value int CELLWIDTH int CELLWIDTH { init; } Property Value int SIZE (int, int) SIZE { init; } Property Value (int, int) Methods CALCENEMYMOVEDEST(int, int) int CALCENEMYMOVEDEST(int current_cell, int current_direction) Parameters current_cell int current_direction int Returns int CALCENEMYMOVEDIR(int, int) int CALCENEMYMOVEDIR(int current_cell, int current_direction) Parameters current_cell int current_direction int Returns int CANHEROGOTO(int) bool CANHEROGOTO(int cell_index) Parameters cell_index int Returns bool GET(int) int GET(int cell_index) Parameters cell_index int Returns int GETCELLOFFSET(int, int) int GETCELLOFFSET(int x, int y) Parameters x int y int Returns int GETCELLPOSX(int) int GETCELLPOSX(int cell_index) Parameters cell_index int Returns int GETCELLPOSY(int) int GETCELLPOSY(int cell_index) Parameters cell_index int Returns int GETCELLSNO(int) int GETCELLSNO(int cell_type) Parameters cell_type int Returns int GETFIELDPOSX(int) int GETFIELDPOSX(int cell_index) Parameters cell_index int Returns int GETFIELDPOSY(int) int GETFIELDPOSY(int cell_index) Parameters cell_index int Returns int GETOFFSET(int, int) int GETOFFSET(int x, int y) Parameters x int y int Returns int ISGATEEMPTY() bool ISGATEEMPTY() Returns bool ISINGATE(int) bool ISINGATE(int _) Parameters _ int Returns bool MOVE(int, int) void MOVE(int _, int _2) Parameters _ int _2 int NEXT() int NEXT() Returns int SET(int, int) void SET(int cell_index, int cell_type) Parameters cell_index int cell_type int SETGATE(int, int, int, int) void SETGATE(int _, int _2, int _3, int _4) Parameters _ int _2 int _3 int _4 int SETROW(int, params int[]) void SETROW(int row_index, params int[] cell_types) Parameters row_index int cell_types int[] TICK() void TICK() Events ONLATEST SignalHandler? ONLATEST Event Type SignalHandler ONNEXT SignalHandler? ONNEXT Event Type SignalHandler"
  },
  "api/Matrix.html": {
    "href": "api/Matrix.html",
    "title": "Namespace Matrix | Cnv API specification",
    "keywords": "Namespace Matrix Classes MATRIX 2D Boulder Dash-like simulation."
  },
  "api/PIKLib.@.html": {
    "href": "api/PIKLib.@.html",
    "title": "Class @ | Cnv API specification",
    "keywords": "Class @ Namespace PIKLib Assembly PIKLib.dll A set of \"global\" methods callable in isolation from any object using the @ syntax. @ Inheritance object @ Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BOOL(string, bool) Creates an object of type BOOL. void BOOL(string name, bool value) Parameters name string The name of created object. value bool The initial value of created object. BREAK() void BREAK() DOUBLE(string, double) Creates an object of type DOUBLE. void DOUBLE(string name, double value) Parameters name string The name of created object. value double The initial value of created object. IF(string, string, string) void IF(string condition, string code_if_true, string code_if_false) Parameters condition string code_if_true string code_if_false string IF(string, string, string, string, string) void IF(string left, string operand, string right, string code_if_true, string code_if_false) Parameters left string operand string right string code_if_true string code_if_false string INT(string, int) Creates an object of type INTEGER. void INT(string name, int value) Parameters name string The name of created object. value int The initial value of created object. LOOP(string, int, int, int) void LOOP(string behaviour, int init, int len, int step) Parameters behaviour string init int len int step int MSGBOX(string) void MSGBOX(string message) Parameters message string RETURN(variable) variable RETURN(variable value) Parameters value variable Returns variable STRING(string, string) Creates an object of type STRING. string STRING(string name, string value) Parameters name string The name of created object. value string The initial value of created object. Returns string WHILE(string, string, string, string) void WHILE(string left, string condition, string right, string code) Parameters left string condition string right string code string"
  },
  "api/PIKLib.ANIMO.html": {
    "href": "api/PIKLib.ANIMO.html",
    "title": "Class ANIMO | Cnv API specification",
    "keywords": "Class ANIMO Namespace PIKLib Assembly PIKLib.dll 2D sprite animation. ANIMO : OBJECT Inheritance object OBJECT ANIMO Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME A path to a file where the animation data is stored. string FILENAME { init; } Property Value string Remarks The file must be in the ANN format. See Also LOAD(string) FPS Target animation speed (in frames per second). int? FPS { init; } Property Value int? Remarks The property overrides settings from a file. See Also SETFPS(int) MONITORCOLLISIONALPHA Should the pixel-perfect collision algorithm be used instead of the default AABB one? bool MONITORCOLLISIONALPHA { init; } Property Value bool Remarks The property is ignored if MONITORCOLLISION is set to FALSE. See Also MONITORCOLLISION MONITORCOLLISION(bool) REMOVEMONITORCOLLISION() MONITORCOLLISION Should 2D collisions be detected for the object? bool MONITORCOLLISION { init; } Property Value bool Remarks Setting the property to TRUE means ONCOLLISION callback is called. By default, AABB collision algorithm is used. See Also MONITORCOLLISIONALPHA MONITORCOLLISION(bool) REMOVEMONITORCOLLISION() PRELOAD Should the file specified in FILENAME be loaded instantly? bool PRELOAD { init; } Property Value bool PRIORITY The position of the object on the Z axis (directed out of the screen). Objects with greater priority are displayed over those with smaller priority. int PRIORITY { init; } Property Value int Remarks For the same priority value, objects declared later are displayed over those declared before. See Also GETPRIORITY() SETPRIORITY(int) RELEASE Should the file handle be released after loading the file specified in FILENAME? bool RELEASE { init; } Property Value bool TOCANVAS bool TOCANVAS { init; } Property Value bool Remarks Without setting the property to TRUE, the object remains invisible. VISIBLE Should the object be visible by default? bool VISIBLE { init; } Property Value bool See Also TOCANVAS HIDE() ISVISIBLE() SHOW() Methods GETCENTERX() Retrieves the horizontal position of the center of the object (in pixels). int GETCENTERX() Returns int The horizontal position of the object's center (in pixels). GETCENTERY() Retrieves the vertical position of the center of the object (in pixels). int GETCENTERY() Returns int The vertical position of the object's center (in pixels). GETCFRAMEINEVENT() Retrieves the 0-based index of the current frame within its parent (a sequence of frames). int GETCFRAMEINEVENT() Returns int The index of the current frame within the current event. See Also GETFRAME() GETCURRFRAMEPOSX() Retrieves the horizontal position of the current animation frame (in pixels). int GETCURRFRAMEPOSX() Returns int The horizontal position of the current animation frame (in pixels). GETCURRFRAMEPOSY() Retrieves the vertical position of the current animation frame (in pixels). int GETCURRFRAMEPOSY() Returns int The vertical position of the current animation frame (in pixels). GETENDX() Retrieves the horizontal position of the right edge of the object (in pixels). int GETENDX() Returns int The horizontal position of the object's right edge (in pixels). GETENDY() Retrieves the vertical position of the bottom edge of the object (in pixels). int GETENDY() Returns int The vertical position of the object's bottom edge (in pixels). GETEVENTNAME() Retrieves the name of the current (a sequence of frames). string GETEVENTNAME() Returns string The name of the current event. GETFRAME() Retrieves the 0-based index of the compound image pointed to by the current animation frame. int GETFRAME() Returns int The index of currently displayed animation image (not the index of a frame). See Also SETFRAME(int) GETCFRAMEINEVENT() GETFRAMENAME() Retrieves the name of the current frame. string GETFRAMENAME() Returns string The name of the current frame. See Also SETFRAMENAME(string) GETHEIGHT() Retrieves the height of the current animation frame (in pixels). int GETHEIGHT() Returns int The height of the current animation frame (in pixels). GETMAXWIDTH() Checks the height of all compound images and returns the maximum (in pixels). int GETMAXWIDTH() Returns int The maximal possible height of the displayed image (in pixels). GETNOE() Retrieves the total number of animation events (sequences of frames). int GETNOE() Returns int The total number of animation events. GETNOF() Retrieves the total number of animation frames within the current (a sequence of frames). int GETNOF() Returns int The total number of animation frames within the current event. GETNOFINEVENT(string) Retrieves the total number of animation frames within the (a sequence of frames) identified by the given name. int GETNOFINEVENT(string event_name) Parameters event_name string The name of the to check. Returns int The total number of animation frames within the specified event. GETOPACITY() Retrieves the general opacity of the animation. int GETOPACITY() Returns int The general opacity of the animation. See Also SETOPACITY(int) GETPOSITIONX() Retrieves the horizontal position of the object (in pixels). int GETPOSITIONX() Returns int The horizontal position of the object (in pixels). See Also GETPOSITIONY() SETPOSITION(int, int) MOVE(int, int) GETPOSITIONY() Retrieves the base vertical position of the object (in pixels). int GETPOSITIONY() Returns int The base vertical position of the object (in pixels). See Also GETPOSITIONX() SETPOSITION(int, int) MOVE(int, int) GETPRIORITY() Retrieves the priority of the object. int GETPRIORITY() Returns int The priority of the object. See Also PRIORITY SETPRIORITY(int) GETWIDTH() Retrieves the width of the current animation frame (in pixels). int GETWIDTH() Returns int The width of the current animation frame (in pixels). HIDE() Makes the object invisible. void HIDE() See Also VISIBLE ISVISIBLE() SHOW() INVALIDATE() void INVALIDATE() ISAT(int, int, bool) bool ISAT(int x, int y, bool _) Parameters x int y int _ bool Returns bool ISNEAR(string, string) Checks if the object is near the other one. bool ISNEAR(string other, string iou_threshold) Parameters other string Another graphics object for which nearness with the current object is checked. iou_threshold string Minimum IoU value to treat two objects as being near each other. Returns bool A boolean value indicating if objects are near each other. ISPLAYING() Checks if any animation (a sequence of frames) is currently being played. bool ISPLAYING() Returns bool Boolean value indicating if any animation is currently being played. See Also PLAY(string) PLAY(int) STOP(bool) PAUSE() RESUME() ISVISIBLE() Checks if the object is visible. bool ISVISIBLE() Returns bool A boolean value indicating if the object is visible. See Also VISIBLE HIDE() SHOW() LOAD(string) Loads animation data from the file located at the given path. void LOAD(string filename) Parameters filename string The path where the file is located. MERGEALPHA() void MERGEALPHA() MONITORCOLLISION(bool) Enables the 2D collision detection for the object. void MONITORCOLLISION(bool pixel_perfect) Parameters pixel_perfect bool Should the pixel-perfect collision algorithm be used instead of the default AABB one? See Also MONITORCOLLISION MONITORCOLLISIONALPHA REMOVEMONITORCOLLISION() MOVE(int, int) Moves the animation object by the given offset (in pixels). void MOVE(int x_offset, int y_offset) Parameters x_offset int A horizontal offset to be added to the current base object position. y_offset int A vertical offset to be added to the current base object position. See Also GETPOSITIONX() GETPOSITIONY() SETPOSITION(int, int) NEXT() void NEXT() NEXTFRAME() void NEXTFRAME() NPLAY() void NPLAY() PAUSE() Pauses the current animation (a sequence of frames). void PAUSE() See Also RESUME() ISPLAYING() PLAY(string) PLAY(int) STOP(bool) PLAY(int) Plays animation identified by index event_index. void PLAY(int event_index) Parameters event_index int The 0-based index of the animation to be played. Remarks Makes the object visible. Animation can loop depending on its definition (see ANN format specification). See Also PLAY(string) ISPLAYING() STOP(bool) PAUSE() RESUME() PLAY(string) Plays animation identified by name event_name. void PLAY(string event_name) Parameters event_name string The name of the animation to be played. Remarks Makes the object visible. Animation can loop depending on its definition (see ANN format specification). See Also PLAY(int) ISPLAYING() STOP(bool) PAUSE() RESUME() PREVFRAME() void PREVFRAME() REMOVEMONITORCOLLISION() Disables the 2D collision detection for the object. void REMOVEMONITORCOLLISION() See Also MONITORCOLLISION MONITORCOLLISIONALPHA MONITORCOLLISION(bool) RESUME() Unpauses the current animation (a sequence of frames). void RESUME() See Also PAUSE() ISPLAYING() PLAY(string) PLAY(int) STOP(bool) SETANCHOR(anchor) void SETANCHOR(anchor anchor) Parameters anchor anchor SETASBUTTON(bool, bool) Enables or disables the object being interactable. void SETASBUTTON(bool as_button, bool with_cursor_pointer) Parameters as_button bool Should interactibility be enabled? with_cursor_pointer bool Should the mouse cursor icon be changed to pointer when it hovers over the interactable area? The argument is ignored if as_button is FALSE. Remarks Interactibility means reacting to mouse cursor being hovered and mouse button being clicked over the displayed object. In reaction to these events, the following signals are fires: ONFOCUSON, ONFOCUSOFF, ONCLICK, ONRELEASE. The interactable area is the AABB representing the frame at the time of calling the method. SETBACKWARD() void SETBACKWARD() SETCLIPPING() void SETCLIPPING() SETFORWARD() void SETFORWARD() SETFPS(int) Sets the animation speed (in frames per second). void SETFPS(int fps) Parameters fps int Remarks The property overrides settings from a file. See Also FPS SETFRAME(int) Changes the currently displayed frame to the image identified by the given index. void SETFRAME(int image_index) Parameters image_index int Remarks If any animation (a sequence of frames) is currently played, the image set by this method gets overwritten by the next update. See Also GETFRAME() SETFRAME(string, int) SETFRAME(string, int) Changes the currently displayed frame to the one identified by the given index within the of name event_name. void SETFRAME(string event_name, int frame_index) Parameters event_name string frame_index int See Also GETFRAME() SETFRAME(int) SETFRAMENAME(string) Changes the name of the current frame. void SETFRAMENAME(string frame_name) Parameters frame_name string The name to be set. See Also GETFRAMENAME() SETOPACITY(int) Sets the general opacity of the animation. void SETOPACITY(int opacity) Parameters opacity int The opacity to be set. See Also GETOPACITY() SETPOSITION(int, int) Sets the base position of the animation. void SETPOSITION(int x, int y) Parameters x int The horizontal position to be set (in pixels). y int The vertical position to be set (in pixels). See Also GETPOSITIONX() GETPOSITIONY() MOVE(int, int) SETPRIORITY(int) Sets the priority of the object. void SETPRIORITY(int priority) Parameters priority int The priority to be set. See Also PRIORITY GETPRIORITY() SHOW() Makes the object visible. void SHOW() See Also VISIBLE HIDE() ISVISIBLE() STOP(bool) Stops the animation (a sequence of frames) being currently played. void STOP(bool emit_on_finished = true) Parameters emit_on_finished bool Should the ONFINISHED signal be emitted? Events ONCLICK A handler for the signal emitted when the object is in interactive mode and a mouse button is pressed over it. SignalHandler? ONCLICK Event Type SignalHandler See Also SETASBUTTON(bool, bool) ONCOLLISION A handler for the signal emitted when the object is in collision with another object. SignalHandler<other_name>? ONCOLLISION Event Type SignalHandler<other_name> Remarks Can be specialized using the other_name parameter which is the name of the object with which the current object collides. See Also MONITORCOLLISION MONITORCOLLISIONALPHA MONITORCOLLISION(bool) REMOVEMONITORCOLLISION() ONFINISHED A handler for the signal emitted when an animation has finished playing. SignalHandler<event_name>? ONFINISHED Event Type SignalHandler<event_name> Remarks Can be specialized using the event_name parameter which is the name of the finished event. See Also STOP(bool) PLAY(string) ONFOCUSOFF A handler for the signal emitted when the object is in interactive mode and the mouse cursors is moved outside its area. SignalHandler? ONFOCUSOFF Event Type SignalHandler See Also SETASBUTTON(bool, bool) ONFOCUSON A handler for the signal emitted when the object is in interactive mode and the mouse cursors is moved onto it. SignalHandler? ONFOCUSON Event Type SignalHandler See Also SETASBUTTON(bool, bool) ONFRAMECHANGED A handler for the signal emitted when the displayed frame changes as a result of an animation being played. SignalHandler? ONFRAMECHANGED Event Type SignalHandler Remarks Can be specialized using the event_name parameter which is the name of the currently being played. See Also PLAY(string) ONINIT A handler for the signal emitted when the object is initialized. SignalHandler? ONINIT Event Type SignalHandler ONRELEASE A handler for the signal emitted when the object is in interactive mode and a mouse button is released over it. SignalHandler? ONRELEASE Event Type SignalHandler See Also SETASBUTTON(bool, bool) ONSIGNAL A handler for the signal emitted when a custom message is sent. SignalHandler<signal_name>? ONSIGNAL Event Type SignalHandler<signal_name> Remarks Can be specialized using the event_name parameter which is the name of the currently being played. ONSTARTED A handler for the signal emitted when an animation has started playing. SignalHandler<event_name>? ONSTARTED Event Type SignalHandler<event_name> Remarks Can be specialized using the event_name parameter which is the name of the started event. See Also PLAY(string)"
  },
  "api/PIKLib.APPLICATION.html": {
    "href": "api/PIKLib.APPLICATION.html",
    "title": "Class APPLICATION | Cnv API specification",
    "keywords": "Class APPLICATION Namespace PIKLib Assembly PIKLib.dll APPLICATION : OBJECT Inheritance object OBJECT APPLICATION Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AUTHOR string AUTHOR { init; } Property Value string BLOOMOO_VERSION string BLOOMOO_VERSION { init; } Property Value string CREATIONTIME string CREATIONTIME { init; } Property Value string EPISODES string EPISODES { init; } Property Value string LASTMODIFYTIME string LASTMODIFYTIME { init; } Property Value string PATH string PATH { init; } Property Value string STARTWITH string STARTWITH { init; } Property Value string VERSION string VERSION { init; } Property Value string Methods EXIT() void EXIT() GETLANGUAGE() string GETLANGUAGE() Returns string RUN(string, string, params variable[]) variable? RUN(string object_name, string method_name, params variable[] arguments) Parameters object_name string method_name string arguments variable[] Returns variable RUNENV(string, string) variable? RUNENV(string scene_name, string beh_name) Parameters scene_name string beh_name string Returns variable SETLANGUAGE(string) void SETLANGUAGE(string lang_id) Parameters lang_id string"
  },
  "api/PIKLib.ARRAY.html": {
    "href": "api/PIKLib.ARRAY.html",
    "title": "Class ARRAY | Cnv API specification",
    "keywords": "Class ARRAY Namespace PIKLib Assembly PIKLib.dll ARRAY : OBJECT Inheritance object OBJECT ARRAY Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ADD() void ADD() ADDAT(int, variable) void ADDAT(int index, variable summand) Parameters index int summand variable CHANGEAT(int, variable) void CHANGEAT(int index, variable value) Parameters index int value variable CLAMPAT(int, variable, variable) void CLAMPAT(int index, variable min, variable max) Parameters index int min variable max variable CONTAINS(variable) void CONTAINS(variable value) Parameters value variable COPYTO() void COPYTO() FIND() void FIND() GET(int) void GET(int index) Parameters index int GETSIZE() void GETSIZE() GETSUMVALUE() void GETSUMVALUE() INSERTAT(int, variable) void INSERTAT(int index, variable value) Parameters index int value variable LOAD() void LOAD() LOADINI() void LOADINI() MODAT() void MODAT() MULAT() void MULAT() REMOVE() void REMOVE() REMOVEALL() void REMOVEALL() REMOVEAT() void REMOVEAT() REVERSEFIND() void REVERSEFIND() SAVE() void SAVE() SAVEINI() void SAVEINI() SUB() void SUB() SUBAT() void SUBAT() SUM() void SUM()"
  },
  "api/PIKLib.BEHAVIOUR.html": {
    "href": "api/PIKLib.BEHAVIOUR.html",
    "title": "Class BEHAVIOUR | Cnv API specification",
    "keywords": "Class BEHAVIOUR Namespace PIKLib Assembly PIKLib.dll BEHAVIOUR : OBJECT Inheritance object OBJECT BEHAVIOUR Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CODE string CODE { init; } Property Value string CONDITION string CONDITION { init; } Property Value string Methods RUN(params variable[]) variable? RUN(params variable[] arguments) Parameters arguments variable[] Returns variable RUNC(params variable[]) variable? RUNC(params variable[] arguments) Parameters arguments variable[] Returns variable RUNLOOPED(int, int, int) void RUNLOOPED(int start, int range_size, int step = 1) Parameters start int range_size int step int"
  },
  "api/PIKLib.BOOL.html": {
    "href": "api/PIKLib.BOOL.html",
    "title": "Class BOOL | Cnv API specification",
    "keywords": "Class BOOL Namespace PIKLib Assembly PIKLib.dll Boolean value. BOOL : OBJECT Inheritance object OBJECT BOOL Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TOINI bool TOINI { init; } Property Value bool VALUE bool VALUE { init; } Property Value bool Methods SET(bool) Sets the value of the object to value. void SET(bool value) Parameters value bool New value for the object. SWITCH(bool, bool) Switches the value of the object between TRUE and FALSE. void SWITCH(bool _unused1, bool _unused2) Parameters _unused1 bool Unused. _unused2 bool Unused. Events ONBRUTALCHANGED SignalHandler<stringified_value>? ONBRUTALCHANGED Event Type SignalHandler<stringified_value> ONCHANGED SignalHandler<stringified_value>? ONCHANGED Event Type SignalHandler<stringified_value>"
  },
  "api/PIKLib.BUTTON.html": {
    "href": "api/PIKLib.BUTTON.html",
    "title": "Class BUTTON | Cnv API specification",
    "keywords": "Class BUTTON Namespace PIKLib Assembly PIKLib.dll An interactable area which reacts to mouse cursor being hovered over it and clicking it. BUTTON : OBJECT Inheritance object OBJECT BUTTON Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DRAGGABLE A value specifying if the object should support dragging. bool DRAGGABLE { init; } Property Value bool ENABLE A value specifying if the object should be activated by default. bool ENABLE { init; } Property Value bool Remarks A disabled button hides associated objects supplied using the GFXSTANDARD, GFXONMOVE and GFXONCLICK properties. GFXONCLICK The name of an ANIMO or IMAGE object to be shown when the mouse button is being pressed over the button. string? GFXONCLICK { init; } Property Value string Remarks This property is overridden by the RECT property. GFXONMOVE The name of an ANIMO or IMAGE object to be shown when the mouse cursor is being hovered over the button. string? GFXONMOVE { init; } Property Value string Remarks This property is overridden by the RECT property. GFXSTANDARD The name of an ANIMO or IMAGE object to be shown when the button is neither pressed nor hovered upon. string GFXSTANDARD { init; } Property Value string Remarks This property is overridden by the RECT property. RECT A literal rect described by four coordinates or a reference being the name of a graphical object to base the rect on, capturing its current state. rect RECT { init; } Property Value rect Remarks This property overrides the GFXSTANDARD, GFXONMOVE and GFXONCLICK properties. If a reference is used, the rect only reflects the state of the referenced object at the time of the method call. For example changing the referenced animation frame does not result in the interactive area of the button being resized/moved. SNDONMOVE The name of a SOUND object to be played when mouse cursor hovers over the button. string? SNDONMOVE { init; } Property Value string Methods DISABLE() void DISABLE() DISABLEBUTVISIBLE() void DISABLEBUTVISIBLE() ENABLE() void ENABLE() GETSTD() string GETSTD() Returns string SETONCLICK(string) void SETONCLICK(string object_name) Parameters object_name string SETONMOVE(string) void SETONMOVE(string object_name) Parameters object_name string SETPRIORITY(int) void SETPRIORITY(int priority) Parameters priority int SETRECT(rect) Sets the interactive area of the button to the given rect. void SETRECT(rect rect) Parameters rect rect A literal rect described by four coordinates or a reference being the name of a graphical object to base the rect on, capturing its current state. Remarks Calling this method does not make the button visible or enabled. Setting a rect makes the GFXSTANDARD, GFXONMOVE and GFXONCLICK properties as well as any further calls to the SETSTD(string), SETONMOVE(string) and SETONCLICK(string) methods to be ignored. If a reference is used, the rect only reflects the state of the referenced object at the time of the method call. For example changing the referenced animation frame does not result in the interactive area of the button being resized/moved. SETSTD(string) void SETSTD(string object_name) Parameters object_name string Events ONACTION SignalHandler? ONACTION Event Type SignalHandler ONCLICKED SignalHandler? ONCLICKED Event Type SignalHandler ONDRAGGING SignalHandler? ONDRAGGING Event Type SignalHandler ONENDDRAGGING SignalHandler? ONENDDRAGGING Event Type SignalHandler ONFOCUSOFF SignalHandler? ONFOCUSOFF Event Type SignalHandler ONFOCUSON SignalHandler? ONFOCUSON Event Type SignalHandler ONINIT SignalHandler? ONINIT Event Type SignalHandler ONRELEASED SignalHandler? ONRELEASED Event Type SignalHandler ONSTARTDRAGGING SignalHandler? ONSTARTDRAGGING Event Type SignalHandler"
  },
  "api/PIKLib.CANVAS_OBSERVER.html": {
    "href": "api/PIKLib.CANVAS_OBSERVER.html",
    "title": "Class CANVAS_OBSERVER | Cnv API specification",
    "keywords": "Class CANVAS_OBSERVER Namespace PIKLib Assembly PIKLib.dll CANVAS_OBSERVER : OBJECT Inheritance object OBJECT CANVAS_OBSERVER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ADD() void ADD() ENABLENOTIFY() void ENABLENOTIFY() GETGRAPHICSAT(int, int) string? GETGRAPHICSAT(int x_position, int y_position) Parameters x_position int y_position int Returns string GETGRAPHICSAT(int, int, bool, int, int, bool) string? GETGRAPHICSAT(int x_position, int y_position, bool _unknown, int min_priority, int max_priority, bool pixel_perfect) Parameters x_position int y_position int _unknown bool min_priority int max_priority int pixel_perfect bool Returns string MOVEBKG(int, int) void MOVEBKG(int x_offset, int y_offset) Parameters x_offset int y_offset int PASTE() void PASTE() REDRAW() void REDRAW() REFRESH() void REFRESH() REMOVE() void REMOVE() SAVE(string) void SAVE(string filename) Parameters filename string SETBACKGROUND(string) void SETBACKGROUND(string object_name_or_filename) Parameters object_name_or_filename string SETBKGPOS(int, int) void SETBKGPOS(int x, int y) Parameters x int y int Events ONWINDOWFOCUSOFF SignalHandler? ONWINDOWFOCUSOFF Event Type SignalHandler ONWINDOWFOCUSON SignalHandler? ONWINDOWFOCUSON Event Type SignalHandler"
  },
  "api/PIKLib.CLASS.html": {
    "href": "api/PIKLib.CLASS.html",
    "title": "Class CLASS | Cnv API specification",
    "keywords": "Class CLASS Namespace PIKLib Assembly PIKLib.dll CLASS : OBJECT Inheritance object OBJECT CLASS Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BASE string BASE { init; } Property Value string DEF string DEF { init; } Property Value string Methods NEW(string, params variable[]) void NEW(string object_name, params variable[] arguments) Parameters object_name string arguments variable[]"
  },
  "api/PIKLib.CNVLOADER.html": {
    "href": "api/PIKLib.CNVLOADER.html",
    "title": "Class CNVLOADER | Cnv API specification",
    "keywords": "Class CNVLOADER Namespace PIKLib Assembly PIKLib.dll CNVLOADER : OBJECT Inheritance object OBJECT CNVLOADER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LOAD() void LOAD() RELEASE() void RELEASE()"
  },
  "api/PIKLib.COMPLEXCONDITION.html": {
    "href": "api/PIKLib.COMPLEXCONDITION.html",
    "title": "Class COMPLEXCONDITION | Cnv API specification",
    "keywords": "Class COMPLEXCONDITION Namespace PIKLib Assembly PIKLib.dll COMPLEXCONDITION : OBJECT Inheritance object OBJECT COMPLEXCONDITION Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CONDITION1 string CONDITION1 { init; } Property Value string CONDITION2 string CONDITION2 { init; } Property Value string OPERATOR complex_operator OPERATOR { init; } Property Value complex_operator Methods BREAK(bool) void BREAK(bool _) Parameters _ bool CHECK(bool) bool CHECK(bool _) Parameters _ bool Returns bool ONE_BREAK(bool) void ONE_BREAK(bool _) Parameters _ bool Events ONRUNTIMEFAILED SignalHandler? ONRUNTIMEFAILED Event Type SignalHandler ONRUNTIMESUCCESS SignalHandler? ONRUNTIMESUCCESS Event Type SignalHandler"
  },
  "api/PIKLib.CONDITION.html": {
    "href": "api/PIKLib.CONDITION.html",
    "title": "Class CONDITION | Cnv API specification",
    "keywords": "Class CONDITION Namespace PIKLib Assembly PIKLib.dll CONDITION : OBJECT Inheritance object OBJECT CONDITION Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OPERAND1 string OPERAND1 { init; } Property Value string OPERAND2 string OPERAND2 { init; } Property Value string OPERATOR condition_operator OPERATOR { init; } Property Value condition_operator Methods BREAK(bool) void BREAK(bool _) Parameters _ bool CHECK(bool) bool CHECK(bool _) Parameters _ bool Returns bool ONE_BREAK(bool) void ONE_BREAK(bool _) Parameters _ bool Events ONRUNTIMEFAILED SignalHandler? ONRUNTIMEFAILED Event Type SignalHandler ONRUNTIMESUCCESS SignalHandler? ONRUNTIMESUCCESS Event Type SignalHandler"
  },
  "api/PIKLib.DATABASE.html": {
    "href": "api/PIKLib.DATABASE.html",
    "title": "Class DATABASE | Cnv API specification",
    "keywords": "Class DATABASE Namespace PIKLib Assembly PIKLib.dll DATABASE : OBJECT Inheritance object OBJECT DATABASE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MODEL string MODEL { init; } Property Value string Methods ADD(string) void ADD(string object_name) Parameters object_name string FIND(string, variable, int) int FIND(string column_name, variable value, int start_row_index) Parameters column_name string value variable start_row_index int Returns int GETCURSORPOS() int GETCURSORPOS() Returns int GETROWSNO() int GETROWSNO() Returns int LOAD(string) void LOAD(string filename) Parameters filename string NEXT() void NEXT() REMOVEALL() void REMOVEALL() SAVE(string) void SAVE(string filename) Parameters filename string SELECT(int) void SELECT(int row_index) Parameters row_index int"
  },
  "api/PIKLib.DOUBLE.html": {
    "href": "api/PIKLib.DOUBLE.html",
    "title": "Class DOUBLE | Cnv API specification",
    "keywords": "Class DOUBLE Namespace PIKLib Assembly PIKLib.dll DOUBLE : OBJECT Inheritance object OBJECT DOUBLE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TOINI bool TOINI { init; } Property Value bool VALUE double VALUE { init; } Property Value double Methods ADD(double) double ADD(double summand) Parameters summand double Returns double ARCTAN(double) double ARCTAN(double degrees) Parameters degrees double Returns double ARCTANEX(double, double, int) double ARCTANEX(double y, double x, int summand = 0) Parameters y double x double summand int Returns double CLAMP(double, double) double CLAMP(double min, double max) Parameters min double max double Returns double COSINUS(double) double COSINUS(double degrees) Parameters degrees double Returns double DIV(double) void DIV(double divisor) Parameters divisor double LENGTH(double, double) double LENGTH(double horizontal_distance, double vertical_distance) Parameters horizontal_distance double vertical_distance double Returns double MAXA(params double[]) double MAXA(params double[] values) Parameters values double[] Returns double MINA(params double[]) double MINA(params double[] values) Parameters values double[] Returns double MUL(double) void MUL(double multiplier) Parameters multiplier double SET(double) void SET(double value) Parameters value double SINUS(double) double SINUS(double degrees) Parameters degrees double Returns double SQRT() double SQRT() Returns double SUB(double) double SUB(double subtrahend) Parameters subtrahend double Returns double"
  },
  "api/PIKLib.EPISODE.html": {
    "href": "api/PIKLib.EPISODE.html",
    "title": "Class EPISODE | Cnv API specification",
    "keywords": "Class EPISODE Namespace PIKLib Assembly PIKLib.dll EPISODE : OBJECT Inheritance object OBJECT EPISODE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AUTHOR string AUTHOR { init; } Property Value string CREATIONTIME string CREATIONTIME { init; } Property Value string LASTMODIFYTIME string LASTMODIFYTIME { init; } Property Value string PATH string PATH { init; } Property Value string SCENES string[] SCENES { init; } Property Value string[] STARTWITH string STARTWITH { init; } Property Value string VERSION string VERSION { init; } Property Value string Methods BACK() void BACK() GETCURRENTSCENE() string GETCURRENTSCENE() Returns string GETLATESTSCENE() string GETLATESTSCENE() Returns string GOTO(string) void GOTO(string scene_name) Parameters scene_name string"
  },
  "api/PIKLib.EXPRESSION.html": {
    "href": "api/PIKLib.EXPRESSION.html",
    "title": "Class EXPRESSION | Cnv API specification",
    "keywords": "Class EXPRESSION Namespace PIKLib Assembly PIKLib.dll EXPRESSION : OBJECT Inheritance object OBJECT EXPRESSION Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OPERAND1 string OPERAND1 { init; } Property Value string OPERAND2 string OPERAND2 { init; } Property Value string OPERATOR expression_operator OPERATOR { init; } Property Value expression_operator"
  },
  "api/PIKLib.FILTER.html": {
    "href": "api/PIKLib.FILTER.html",
    "title": "Class FILTER | Cnv API specification",
    "keywords": "Class FILTER Namespace PIKLib Assembly PIKLib.dll FILTER : OBJECT Inheritance object OBJECT FILTER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ACTION string ACTION { init; } Property Value string"
  },
  "api/PIKLib.FONT.html": {
    "href": "api/PIKLib.FONT.html",
    "title": "Class FONT | Cnv API specification",
    "keywords": "Class FONT Namespace PIKLib Assembly PIKLib.dll FONT : OBJECT Inheritance object OBJECT FONT Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DEF_family_style_size string DEF_family_style_size { init; } Property Value string"
  },
  "api/PIKLib.GROUP.html": {
    "href": "api/PIKLib.GROUP.html",
    "title": "Class GROUP | Cnv API specification",
    "keywords": "Class GROUP Namespace PIKLib Assembly PIKLib.dll GROUP : OBJECT Inheritance object OBJECT GROUP Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ADD(string) void ADD(string object_name) Parameters object_name string ADDCLONES() void ADDCLONES() GETSIZE() void GETSIZE() NEXT() void NEXT() PREV() void PREV() REMOVE(string) void REMOVE(string object_name) Parameters object_name string REMOVEALL() void REMOVEALL() RESETMARKER() void RESETMARKER() SETMARKERPOS(int) void SETMARKERPOS(int index) Parameters index int Events ONINIT SignalHandler? ONINIT Event Type SignalHandler"
  },
  "api/PIKLib.IMAGE.html": {
    "href": "api/PIKLib.IMAGE.html",
    "title": "Class IMAGE | Cnv API specification",
    "keywords": "Class IMAGE Namespace PIKLib Assembly PIKLib.dll IMAGE : OBJECT Inheritance object OBJECT IMAGE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME string FILENAME { init; } Property Value string MONITORCOLLISION bool MONITORCOLLISION { init; } Property Value bool MONITORCOLLISIONALPHA bool MONITORCOLLISIONALPHA { init; } Property Value bool PRELOAD bool PRELOAD { init; } Property Value bool PRIORITY int PRIORITY { init; } Property Value int RELEASE bool RELEASE { init; } Property Value bool TOCANVAS bool TOCANVAS { init; } Property Value bool VISIBLE bool VISIBLE { init; } Property Value bool Methods GETALPHA() void GETALPHA() GETHEIGHT() void GETHEIGHT() GETPIXEL() void GETPIXEL() GETPOSITIONX() void GETPOSITIONX() GETPOSITIONY() void GETPOSITIONY() GETWIDTH() void GETWIDTH() HIDE() void HIDE() INVALIDATE() void INVALIDATE() ISVISIBLE() void ISVISIBLE() LOAD() void LOAD() MERGEALPHA(int, int, string) void MERGEALPHA(int x_offset, int y_offset, string object_name) Parameters x_offset int y_offset int object_name string MOVE(int, int) void MOVE(int x_offset, int y_offset) Parameters x_offset int y_offset int SETASBUTTON() void SETASBUTTON() SETCLIPPING(int, int, int, int) void SETCLIPPING(int left_x, int top_y, int _width, int _height) Parameters left_x int top_y int _width int _height int SETOPACITY() void SETOPACITY() SETPOSITION(int, int) void SETPOSITION(int x, int y) Parameters x int y int SETPRIORITY() void SETPRIORITY() SHOW() void SHOW() Events ONCLICK SignalHandler? ONCLICK Event Type SignalHandler ONFOCUSOFF SignalHandler? ONFOCUSOFF Event Type SignalHandler ONFOCUSON SignalHandler? ONFOCUSON Event Type SignalHandler ONINIT SignalHandler? ONINIT Event Type SignalHandler"
  },
  "api/PIKLib.INTEGER.html": {
    "href": "api/PIKLib.INTEGER.html",
    "title": "Class INTEGER | Cnv API specification",
    "keywords": "Class INTEGER Namespace PIKLib Assembly PIKLib.dll INTEGER : OBJECT Inheritance object OBJECT INTEGER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TOINI bool TOINI { init; } Property Value bool VALUE int VALUE { init; } Property Value int VARTYPE string VARTYPE { init; } Property Value string Methods ABS(int) Sets the modulus of value as the value of the object. int ABS(int value) Parameters value int The value of which modulus is to be set as the value of the object. Returns int ADD(int) int ADD(int summand) Parameters summand int Returns int AND(int) int AND(int operand) Parameters operand int Returns int CLAMP(int, int) int CLAMP(int min, int max) Parameters min int max int Returns int DEC() void DEC() DIV(int) void DIV(int divisor) Parameters divisor int INC() void INC() LENGTH(int, int) int LENGTH(int horizontal_distance, int vertical_distance) Parameters horizontal_distance int vertical_distance int Returns int MOD(int) void MOD(int divisor) Parameters divisor int MUL(int) void MUL(int multiplier) Parameters multiplier int OR(int) int OR(int operand) Parameters operand int Returns int RANDOM(int) int RANDOM(int max_exclusive) Parameters max_exclusive int Returns int RANDOM(int, int) int RANDOM(int summand, int max_exclusive) Parameters summand int max_exclusive int Returns int RESETINI() void RESETINI() SET(int) void SET(int value) Parameters value int SUB(int) int SUB(int subtrahend) Parameters subtrahend int Returns int SWITCH(int, int) void SWITCH(int value1, int value2) Parameters value1 int value2 int Events ONBRUTALCHANGED SignalHandler<stringified_value>? ONBRUTALCHANGED Event Type SignalHandler<stringified_value> ONCHANGED SignalHandler<stringified_value>? ONCHANGED Event Type SignalHandler<stringified_value> ONINIT SignalHandler? ONINIT Event Type SignalHandler ONSIGNAL SignalHandler<signal_name>? ONSIGNAL Event Type SignalHandler<signal_name>"
  },
  "api/PIKLib.KEYBOARD.html": {
    "href": "api/PIKLib.KEYBOARD.html",
    "title": "Class KEYBOARD | Cnv API specification",
    "keywords": "Class KEYBOARD Namespace PIKLib Assembly PIKLib.dll KEYBOARD : OBJECT Inheritance object OBJECT KEYBOARD Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DISABLE() void DISABLE() ENABLE() void ENABLE() GETLATESTKEY() void GETLATESTKEY() ISENABLED() bool ISENABLED() Returns bool ISKEYDOWN() bool ISKEYDOWN() Returns bool SETAUTOREPEAT() void SETAUTOREPEAT() Events ONCHAR SignalHandler<char_name>? ONCHAR Event Type SignalHandler<char_name> ONKEYDOWN SignalHandler? ONKEYDOWN Event Type SignalHandler ONKEYUP SignalHandler? ONKEYUP Event Type SignalHandler"
  },
  "api/PIKLib.MOUSE.html": {
    "href": "api/PIKLib.MOUSE.html",
    "title": "Class MOUSE | Cnv API specification",
    "keywords": "Class MOUSE Namespace PIKLib Assembly PIKLib.dll MOUSE : OBJECT Inheritance object OBJECT MOUSE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RAW int? RAW { init; } Property Value int? Methods DISABLE() void DISABLE() DISABLESIGNAL() void DISABLESIGNAL() ENABLE() void ENABLE() ENABLESIGNAL() void ENABLESIGNAL() GETPOSX() int GETPOSX() Returns int GETPOSY() int GETPOSY() Returns int HIDE() void HIDE() ISLBUTTONDOWN() bool ISLBUTTONDOWN() Returns bool SET() void SET() SETCLIPRECT() void SETCLIPRECT() SETPOSITION(int, int) void SETPOSITION(int x, int y) Parameters x int y int SHOW() void SHOW() Events ONCLICK SignalHandler<button_name>? ONCLICK Event Type SignalHandler<button_name> ONDBLCLICK SignalHandler? ONDBLCLICK Event Type SignalHandler ONINIT SignalHandler? ONINIT Event Type SignalHandler ONMOVE SignalHandler? ONMOVE Event Type SignalHandler ONRELEASE SignalHandler? ONRELEASE Event Type SignalHandler"
  },
  "api/PIKLib.MULTIARRAY.html": {
    "href": "api/PIKLib.MULTIARRAY.html",
    "title": "Class MULTIARRAY | Cnv API specification",
    "keywords": "Class MULTIARRAY Namespace PIKLib Assembly PIKLib.dll MULTIARRAY : OBJECT Inheritance object OBJECT MULTIARRAY Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DIMENSIONS int DIMENSIONS { init; } Property Value int Methods GET(params int[]) variable? GET(params int[] indices) Parameters indices int[] Returns variable SET(variable, params int[]) void SET(variable value, params int[] indices) Parameters value variable indices int[]"
  },
  "api/PIKLib.MUSIC.html": {
    "href": "api/PIKLib.MUSIC.html",
    "title": "Class MUSIC | Cnv API specification",
    "keywords": "Class MUSIC Namespace PIKLib Assembly PIKLib.dll MUSIC : OBJECT Inheritance object OBJECT MUSIC Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME string FILENAME { init; } Property Value string Methods PLAY() void PLAY()"
  },
  "api/PIKLib.PATTERN.html": {
    "href": "api/PIKLib.PATTERN.html",
    "title": "Class PATTERN | Cnv API specification",
    "keywords": "Class PATTERN Namespace PIKLib Assembly PIKLib.dll PATTERN : OBJECT Inheritance object OBJECT PATTERN Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GRIDX int GRIDX { init; } Property Value int GRIDY int GRIDY { init; } Property Value int HEIGHT int HEIGHT { init; } Property Value int LAYERS int LAYERS { init; } Property Value int PRIORITY int PRIORITY { init; } Property Value int TOCANVAS bool TOCANVAS { init; } Property Value bool VISIBLE bool VISIBLE { init; } Property Value bool WIDTH int WIDTH { init; } Property Value int Methods ADD(string, int, int, string, int) void ADD(string _, int x, int y, string object_name, int _2) Parameters _ string x int y int object_name string _2 int GETGRAPHICSAT(int, int, bool, bool, int) string GETGRAPHICSAT(int x, int y, bool _, bool _2, int _3) Parameters x int y int _ bool _2 bool _3 int Returns string MOVE(int, int) void MOVE(int x, int y) Parameters x int y int"
  },
  "api/PIKLib.RAND.html": {
    "href": "api/PIKLib.RAND.html",
    "title": "Class RAND | Cnv API specification",
    "keywords": "Class RAND Namespace PIKLib Assembly PIKLib.dll RAND : OBJECT Inheritance object OBJECT RAND Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GET(int) int GET(int max_exclusive) Parameters max_exclusive int Returns int GET(int, int) int GET(int summand, int max_exclusive) Parameters summand int max_exclusive int Returns int GETPLENTY(string, int, int, int, bool) void GETPLENTY(string arr_name, int _, int _2, int _3, bool _4) Parameters arr_name string _ int _2 int _3 int _4 bool"
  },
  "api/PIKLib.SCENE.html": {
    "href": "api/PIKLib.SCENE.html",
    "title": "Class SCENE | Cnv API specification",
    "keywords": "Class SCENE Namespace PIKLib Assembly PIKLib.dll SCENE : OBJECT Inheritance object OBJECT SCENE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AUTHOR string AUTHOR { init; } Property Value string BACKGROUND string BACKGROUND { init; } Property Value string CREATIONTIME string CREATIONTIME { init; } Property Value string DLLS string[] DLLS { init; } Property Value string[] LASTMODIFYTIME string LASTMODIFYTIME { init; } Property Value string MUSIC string MUSIC { init; } Property Value string PATH string PATH { init; } Property Value string VERSION string VERSION { init; } Property Value string Methods GETMAXHSPRIORITY() void GETMAXHSPRIORITY() GETMINHSPRIORITY() void GETMINHSPRIORITY() GETPLAYINGANIMO() void GETPLAYINGANIMO() GETPLAYINGSEQ() void GETPLAYINGSEQ() PAUSE() void PAUSE() REMOVECLONES() void REMOVECLONES() RESUME() void RESUME() RUN(string, string, params variable[]) variable? RUN(string object_name, string method_name, params variable[] arguments) Parameters object_name string method_name string arguments variable[] Returns variable RUNCLONES() void RUNCLONES() SETMAXHSPRIORITY() void SETMAXHSPRIORITY() SETMINHSPRIORITY() void SETMINHSPRIORITY() SETMUSICVOLUME(int) void SETMUSICVOLUME(int volume) Parameters volume int STARTMUSIC() void STARTMUSIC() STOPMUSIC() void STOPMUSIC()"
  },
  "api/PIKLib.SEQUENCE.html": {
    "href": "api/PIKLib.SEQUENCE.html",
    "title": "Class SEQUENCE | Cnv API specification",
    "keywords": "Class SEQUENCE Namespace PIKLib Assembly PIKLib.dll SEQUENCE : OBJECT Inheritance object OBJECT SEQUENCE Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME string FILENAME { init; } Property Value string Methods GETEVENTNAME() string GETEVENTNAME() Returns string HIDE() void HIDE() ISPLAYING() bool ISPLAYING() Returns bool PAUSE() void PAUSE() PLAY(string) void PLAY(string parameter) Parameters parameter string RESUME() void RESUME() STOP(bool) void STOP(bool emit_on_finished = true) Parameters emit_on_finished bool Events ONFINISHED SignalHandler<parameter>? ONFINISHED Event Type SignalHandler<parameter> ONINIT SignalHandler? ONINIT Event Type SignalHandler ONSTARTED SignalHandler<parameter>? ONSTARTED Event Type SignalHandler<parameter>"
  },
  "api/PIKLib.SOUND.html": {
    "href": "api/PIKLib.SOUND.html",
    "title": "Class SOUND | Cnv API specification",
    "keywords": "Class SOUND Namespace PIKLib Assembly PIKLib.dll SOUND : OBJECT Inheritance object OBJECT SOUND Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME string FILENAME { init; } Property Value string FLUSHAFTERPLAYED bool FLUSHAFTERPLAYED { init; } Property Value bool PRELOAD bool PRELOAD { init; } Property Value bool RELEASE bool RELEASE { init; } Property Value bool Methods ISPLAYING() bool ISPLAYING() Returns bool LOAD(string) void LOAD(string filename) Parameters filename string PAUSE() void PAUSE() PLAY() void PLAY() RESUME() void RESUME() SETVOLUME(int) void SETVOLUME(int volume) Parameters volume int STOP() void STOP() Events ONFINISHED SignalHandler? ONFINISHED Event Type SignalHandler ONINIT SignalHandler? ONINIT Event Type SignalHandler ONSTARTED SignalHandler? ONSTARTED Event Type SignalHandler"
  },
  "api/PIKLib.STATICFILTER.html": {
    "href": "api/PIKLib.STATICFILTER.html",
    "title": "Class STATICFILTER | Cnv API specification",
    "keywords": "Class STATICFILTER Namespace PIKLib Assembly PIKLib.dll STATICFILTER : OBJECT Inheritance object OBJECT STATICFILTER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ACTION string ACTION { init; } Property Value string Methods LINK(string) void LINK(string graphics_name) Parameters graphics_name string SETPROPERTY(string, variable) void SETPROPERTY(string key, variable value) Parameters key string value variable UNLINK(string) void UNLINK(string graphics_name) Parameters graphics_name string"
  },
  "api/PIKLib.STRING.html": {
    "href": "api/PIKLib.STRING.html",
    "title": "Class STRING | Cnv API specification",
    "keywords": "Class STRING Namespace PIKLib Assembly PIKLib.dll STRING : OBJECT Inheritance object OBJECT STRING Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TOINI bool TOINI { init; } Property Value bool VALUE string VALUE { init; } Property Value string Methods ADD(string) string ADD(string suffix) Parameters suffix string Returns string COPYFILE(string, string) bool COPYFILE(string filename, string copied_filename) Parameters filename string copied_filename string Returns bool CUT(int, int) void CUT(int index, int length) Parameters index int length int FIND(string, int) int FIND(string needle, int start_index = 0) Parameters needle string start_index int Returns int GET(int) string GET(int start_index) Parameters start_index int Returns string GET(int, int) string GET(int start_index, int length) Parameters start_index int length int Returns string LENGTH() int LENGTH() Returns int REPLACE(string, string) void REPLACE(string search, string replace) Parameters search string replace string REPLACEAT(int, string) void REPLACEAT(int index, string replace) Parameters index int replace string RESETINI() void RESETINI() SET(string) void SET(string value) Parameters value string SUB(int, int) void SUB(int index, int length) Parameters index int length int UPPER() void UPPER() Events ONBRUTALCHANGED SignalHandler<stringified_value>? ONBRUTALCHANGED Event Type SignalHandler<stringified_value> ONCHANGED SignalHandler<stringified_value>? ONCHANGED Event Type SignalHandler<stringified_value> ONINIT SignalHandler? ONINIT Event Type SignalHandler"
  },
  "api/PIKLib.STRUCT.html": {
    "href": "api/PIKLib.STRUCT.html",
    "title": "Class STRUCT | Cnv API specification",
    "keywords": "Class STRUCT Namespace PIKLib Assembly PIKLib.dll STRUCT : OBJECT Inheritance object OBJECT STRUCT Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FIELDS (string, string)[] FIELDS { init; } Property Value (string, string)[] Methods GETFIELD(string) variable GETFIELD(string field_name) Parameters field_name string Returns variable SET(string) void SET(string struct_name) Parameters struct_name string SETFIELD(string, variable) void SETFIELD(string field_name, variable value) Parameters field_name string value variable"
  },
  "api/PIKLib.SYSTEM.html": {
    "href": "api/PIKLib.SYSTEM.html",
    "title": "Class SYSTEM | Cnv API specification",
    "keywords": "Class SYSTEM Namespace PIKLib Assembly PIKLib.dll SYSTEM : OBJECT Inheritance object OBJECT SYSTEM Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GETDATE() string GETDATE() Returns string GETMHZ() int GETMHZ() Returns int GETMINUTES() int GETMINUTES() Returns int GETSECONDS() int GETSECONDS() Returns int GETSYSTEMTIME() int GETSYSTEMTIME() Returns int"
  },
  "api/PIKLib.TEXT.html": {
    "href": "api/PIKLib.TEXT.html",
    "title": "Class TEXT | Cnv API specification",
    "keywords": "Class TEXT Namespace PIKLib Assembly PIKLib.dll TEXT : OBJECT Inheritance object OBJECT TEXT Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FONT string FONT { init; } Property Value string HJUSTIFY bool HJUSTIFY { init; } Property Value bool HYPERTEXT bool HYPERTEXT { init; } Property Value bool MONITORCOLLISION bool MONITORCOLLISION { init; } Property Value bool MONITORCOLLISIONALPHA bool MONITORCOLLISIONALPHA { init; } Property Value bool RECT rect RECT { init; } Property Value rect TEXT string TEXT { init; } Property Value string TOCANVAS bool TOCANVAS { init; } Property Value bool VISIBLE bool VISIBLE { init; } Property Value bool VJUSTIFY bool VJUSTIFY { init; } Property Value bool Methods HIDE() void HIDE() SETCOLOR() void SETCOLOR() SETJUSTIFY() void SETJUSTIFY() SETPOSITION() void SETPOSITION() SETTEXT(string) void SETTEXT(string text) Parameters text string SHOW() void SHOW() Events ONINIT SignalHandler? ONINIT Event Type SignalHandler"
  },
  "api/PIKLib.TIMER.html": {
    "href": "api/PIKLib.TIMER.html",
    "title": "Class TIMER | Cnv API specification",
    "keywords": "Class TIMER Namespace PIKLib Assembly PIKLib.dll TIMER : OBJECT Inheritance object OBJECT TIMER Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ELAPSE int ELAPSE { init; } Property Value int ENABLED bool ENABLED { init; } Property Value bool TICKS int TICKS { init; } Property Value int Methods DISABLE() void DISABLE() ENABLE() void ENABLE() GETTICKS() int GETTICKS() Returns int RESET() void RESET() SET(int) void SET(int _) Parameters _ int SETELAPSE(int) void SETELAPSE(int _) Parameters _ int Events ONINIT SignalHandler? ONINIT Event Type SignalHandler ONTICK SignalHandler<stringified_tick_number>? ONTICK Event Type SignalHandler<stringified_tick_number>"
  },
  "api/PIKLib.VECTOR.html": {
    "href": "api/PIKLib.VECTOR.html",
    "title": "Class VECTOR | Cnv API specification",
    "keywords": "Class VECTOR Namespace PIKLib Assembly PIKLib.dll VECTOR : OBJECT Inheritance object OBJECT VECTOR Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SIZE int SIZE { init; } Property Value int VALUE double[] VALUE { init; } Property Value double[] Methods ADD(string) void ADD(string summand_name) Parameters summand_name string ASSIGN(params double[]) void ASSIGN(params double[] values) Parameters values double[] GET(int) double GET(int index) Parameters index int Returns double LEN() double LEN() Returns double MUL(double) void MUL(double multiplier) Parameters multiplier double NORMALIZE() void NORMALIZE() REFLECT(string, string) void REFLECT(string normal_name, string result_name) Parameters normal_name string result_name string"
  },
  "api/PIKLib.VIRTUALGRAPHICSOBJECT.html": {
    "href": "api/PIKLib.VIRTUALGRAPHICSOBJECT.html",
    "title": "Class VIRTUALGRAPHICSOBJECT | Cnv API specification",
    "keywords": "Class VIRTUALGRAPHICSOBJECT Namespace PIKLib Assembly PIKLib.dll VIRTUALGRAPHICSOBJECT : OBJECT Inheritance object OBJECT VIRTUALGRAPHICSOBJECT Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ASBUTTON bool ASBUTTON { init; } Property Value bool MASK string MASK { init; } Property Value string MONITORCOLLISION bool MONITORCOLLISION { init; } Property Value bool MONITORCOLLISIONALPHA bool MONITORCOLLISIONALPHA { init; } Property Value bool PRIORITY int PRIORITY { init; } Property Value int SOURCE string SOURCE { init; } Property Value string TOCANVAS bool TOCANVAS { init; } Property Value bool VISIBLE bool VISIBLE { init; } Property Value bool Methods GETHEIGHT() int GETHEIGHT() Returns int GETPOSITIONX() int GETPOSITIONX() Returns int GETPOSITIONY() int GETPOSITIONY() Returns int GETWIDTH() int GETWIDTH() Returns int MOVE(int, int) void MOVE(int x_offset, int y_offset) Parameters x_offset int y_offset int SETMASK(string) void SETMASK(string graphics_name) Parameters graphics_name string SETPOSITION(int, int) void SETPOSITION(int x, int y) Parameters x int y int SETPRIORITY(int) void SETPRIORITY(int priority) Parameters priority int SETSOURCE(string) void SETSOURCE(string graphics_name) Parameters graphics_name string"
  },
  "api/PIKLib.html": {
    "href": "api/PIKLib.html",
    "title": "Namespace PIKLib | Cnv API specification",
    "keywords": "Namespace PIKLib Classes @ A set of \"global\" methods callable in isolation from any object using the @ syntax. ANIMO 2D sprite animation. APPLICATION ARRAY BEHAVIOUR BOOL Boolean value. BUTTON An interactable area which reacts to mouse cursor being hovered over it and clicking it. CANVAS_OBSERVER CLASS CNVLOADER COMPLEXCONDITION CONDITION DATABASE DOUBLE EPISODE EXPRESSION FILTER FONT GROUP IMAGE INTEGER KEYBOARD MOUSE MULTIARRAY MUSIC PATTERN RAND SCENE SEQUENCE SOUND STATICFILTER STRING STRUCT SYSTEM TEXT TIMER VECTOR VIRTUALGRAPHICSOBJECT"
  },
  "api/World.WORLD.html": {
    "href": "api/World.WORLD.html",
    "title": "Class WORLD | Cnv API specification",
    "keywords": "Class WORLD Namespace World Assembly World.dll 3D physics simulation. WORLD : OBJECT Inheritance object OBJECT WORLD Inherited Members OBJECT.DESCRIPTION OBJECT.TYPE OBJECT.ADDBEHAVIOUR(string, string) OBJECT.CLONE(int) OBJECT.GETCLONEINDEX() OBJECT.GETNAME() OBJECT.MSGBOX(string) OBJECT.REMOVEBEHAVIOUR(string) OBJECT.RESETCLONES() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FILENAME string FILENAME { init; } Property Value string Methods ADDBODY() void ADDBODY() ADDFORCE() void ADDFORCE() ADDGRAVITYEX() void ADDGRAVITYEX() FINDPATH() void FINDPATH() FOLLOWPATH() void FOLLOWPATH() GETANGLE() void GETANGLE() GETBKGPOSX() void GETBKGPOSX() GETBKGPOSY() void GETBKGPOSY() GETMOVEDISTANCE() void GETMOVEDISTANCE() GETPOSITIONX() void GETPOSITIONX() GETPOSITIONY() void GETPOSITIONY() GETPOSITIONZ() void GETPOSITIONZ() GETROTATIONZ() void GETROTATIONZ() GETSPEED() void GETSPEED() JOIN() void JOIN() LINK() void LINK() LOAD() void LOAD() MOVEOBJECTS() void MOVEOBJECTS() REMOVEOBJECT() void REMOVEOBJECT() SETACTIVE() void SETACTIVE() SETBKGSIZE() void SETBKGSIZE() SETBODYDYNAMICS() void SETBODYDYNAMICS() SETG() void SETG() SETGRAVITY() void SETGRAVITY() SETGRAVITYCENTER() void SETGRAVITYCENTER() SETLIMIT() void SETLIMIT() SETMAXSPEED() void SETMAXSPEED() SETMOVEFLAGS() void SETMOVEFLAGS() SETPOSITION() void SETPOSITION() SETREFOBJECT() void SETREFOBJECT() SETVELOCITY() void SETVELOCITY() START() void START() STOP() void STOP() UNLINK() void UNLINK()"
  },
  "api/World.html": {
    "href": "api/World.html",
    "title": "Namespace World | Cnv API specification",
    "keywords": "Namespace World Classes WORLD 3D physics simulation."
  },
  "api/abstractions.BoolVariable.html": {
    "href": "api/abstractions.BoolVariable.html",
    "title": "Class BoolVariable | Cnv API specification",
    "keywords": "Class BoolVariable Namespace abstractions Assembly PIKLib.dll record BoolVariable : variable, IEquatable<variable>, IEquatable<BoolVariable> Inheritance object variable BoolVariable Implements IEquatable<variable> IEquatable<BoolVariable> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BoolVariable(bool) BoolVariable(bool value) Parameters value bool Properties value bool value { get; init; } Property Value bool"
  },
  "api/abstractions.DoubleVariable.html": {
    "href": "api/abstractions.DoubleVariable.html",
    "title": "Class DoubleVariable | Cnv API specification",
    "keywords": "Class DoubleVariable Namespace abstractions Assembly PIKLib.dll record DoubleVariable : variable, IEquatable<variable>, IEquatable<DoubleVariable> Inheritance object variable DoubleVariable Implements IEquatable<variable> IEquatable<DoubleVariable> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DoubleVariable(double) DoubleVariable(double value) Parameters value double Properties value double value { get; init; } Property Value double"
  },
  "api/abstractions.IntVariable.html": {
    "href": "api/abstractions.IntVariable.html",
    "title": "Class IntVariable | Cnv API specification",
    "keywords": "Class IntVariable Namespace abstractions Assembly PIKLib.dll record IntVariable : variable, IEquatable<variable>, IEquatable<IntVariable> Inheritance object variable IntVariable Implements IEquatable<variable> IEquatable<IntVariable> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntVariable(int) IntVariable(int value) Parameters value int Properties value int value { get; init; } Property Value int"
  },
  "api/abstractions.LiteralRect.html": {
    "href": "api/abstractions.LiteralRect.html",
    "title": "Class LiteralRect | Cnv API specification",
    "keywords": "Class LiteralRect Namespace abstractions Assembly PIKLib.dll record LiteralRect : rect, IEquatable<rect>, IEquatable<LiteralRect> Inheritance object rect LiteralRect Implements IEquatable<rect> IEquatable<LiteralRect> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiteralRect(int, int, int, int) LiteralRect(int left_x, int top_y, int right_x, int bottom_y) Parameters left_x int top_y int right_x int bottom_y int Properties bottom_y int bottom_y { get; init; } Property Value int left_x int left_x { get; init; } Property Value int right_x int right_x { get; init; } Property Value int top_y int top_y { get; init; } Property Value int"
  },
  "api/abstractions.OBJECT.html": {
    "href": "api/abstractions.OBJECT.html",
    "title": "Class OBJECT | Cnv API specification",
    "keywords": "Class OBJECT Namespace abstractions Assembly PIKLib.dll OBJECT Inheritance object OBJECT Derived INERTIA MATRIX ANIMO APPLICATION ARRAY BEHAVIOUR BOOL BUTTON CANVAS_OBSERVER CLASS CNVLOADER COMPLEXCONDITION CONDITION DATABASE DOUBLE EPISODE EXPRESSION FILTER FONT GROUP IMAGE INTEGER KEYBOARD MOUSE MULTIARRAY MUSIC PATTERN RAND SCENE SEQUENCE SOUND STATICFILTER STRING STRUCT SYSTEM TEXT TIMER VECTOR VIRTUALGRAPHICSOBJECT WORLD Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DESCRIPTION A short description of the object. string? DESCRIPTION { init; } Property Value string TYPE The type of the object. string TYPE { init; } Property Value string Methods ADDBEHAVIOUR(string, string) Adds/overwrites a handler for the given signal. void ADDBEHAVIOUR(string signal_name, string code) Parameters signal_name string The (parametrized) name of the signal. code string A handler (code block or a BEHAVIOUR name). CLONE(int) Sets the clone count for the object. If it is greater than current clone count, new clones are created. void CLONE(int count = 1) Parameters count int Desired clone count. GETCLONEINDEX() Returns the clone index of the object. int GETCLONEINDEX() Returns int 0 if the object is the original, unique sequential 1-based index otherwise. GETNAME() Retrieves the name of the object. string GETNAME() Returns string The object name. MSGBOX(string) Displays a message box with the given contents. void MSGBOX(string message) Parameters message string A message to be displayed. Remarks Does nothing in the release build of the original engine. REMOVEBEHAVIOUR(string) Removes the handler for the given signal (if it exists). void REMOVEBEHAVIOUR(string signal_name) Parameters signal_name string The (parametrized) name of the signal. RESETCLONES() Resets the clone count. void RESETCLONES()"
  },
  "api/abstractions.ReferenceRect.html": {
    "href": "api/abstractions.ReferenceRect.html",
    "title": "Class ReferenceRect | Cnv API specification",
    "keywords": "Class ReferenceRect Namespace abstractions Assembly PIKLib.dll record ReferenceRect : rect, IEquatable<rect>, IEquatable<ReferenceRect> Inheritance object rect ReferenceRect Implements IEquatable<rect> IEquatable<ReferenceRect> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReferenceRect(string) ReferenceRect(string object_name) Parameters object_name string Properties object_name string object_name { get; init; } Property Value string"
  },
  "api/abstractions.SignalHandler-1.html": {
    "href": "api/abstractions.SignalHandler-1.html",
    "title": "Delegate SignalHandler<P> | Cnv API specification",
    "keywords": "Delegate SignalHandler<P> Namespace abstractions Assembly PIKLib.dll A specialized signal handler identified by its parametr. It can receive an arbitrary number of arguments. delegate void SignalHandler<P>(P parameter, params variable[] arguments) Parameters parameter P The parameter identifying the handler. arguments variable[] Arguments passed to the handler. Type Parameters P Type of the parameter (for documentation purposes)."
  },
  "api/abstractions.SignalHandler.html": {
    "href": "api/abstractions.SignalHandler.html",
    "title": "Delegate SignalHandler | Cnv API specification",
    "keywords": "Delegate SignalHandler Namespace abstractions Assembly PIKLib.dll A plain non-parametrized signal handler. It can receive an arbitrary number of arguments. delegate void SignalHandler(params variable[] arguments) Parameters arguments variable[] Arguments passed to the handler."
  },
  "api/abstractions.StringVariable.html": {
    "href": "api/abstractions.StringVariable.html",
    "title": "Class StringVariable | Cnv API specification",
    "keywords": "Class StringVariable Namespace abstractions Assembly PIKLib.dll record StringVariable : variable, IEquatable<variable>, IEquatable<StringVariable> Inheritance object variable StringVariable Implements IEquatable<variable> IEquatable<StringVariable> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringVariable(string) StringVariable(string value) Parameters value string Properties value string value { get; init; } Property Value string"
  },
  "api/abstractions.anchor.html": {
    "href": "api/abstractions.anchor.html",
    "title": "Enum anchor | Cnv API specification",
    "keywords": "Enum anchor Namespace abstractions Assembly PIKLib.dll enum anchor Fields BOTTOM = 8 CENTER = 0 LEFT = 5 LEFTLOWER = 3 LEFTUPPER = 1 RIGHT = 6 RIGHTLOWER = 4 RIGHTUPPER = 2 TOP = 7"
  },
  "api/abstractions.button_name.html": {
    "href": "api/abstractions.button_name.html",
    "title": "Class button_name | Cnv API specification",
    "keywords": "Class button_name Namespace abstractions Assembly PIKLib.dll record button_name : IEquatable<button_name> Inheritance object button_name Implements IEquatable<button_name> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors button_name(string) button_name(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator button_name(string) implicit operator button_name(string s) Parameters s string Returns button_name implicit operator string(button_name) implicit operator string(button_name n) Parameters n button_name Returns string"
  },
  "api/abstractions.char_name.html": {
    "href": "api/abstractions.char_name.html",
    "title": "Class char_name | Cnv API specification",
    "keywords": "Class char_name Namespace abstractions Assembly PIKLib.dll record char_name : IEquatable<char_name> Inheritance object char_name Implements IEquatable<char_name> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors char_name(string) char_name(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator char_name(string) implicit operator char_name(string s) Parameters s string Returns char_name implicit operator string(char_name) implicit operator string(char_name n) Parameters n char_name Returns string"
  },
  "api/abstractions.complex_operator.html": {
    "href": "api/abstractions.complex_operator.html",
    "title": "Enum complex_operator | Cnv API specification",
    "keywords": "Enum complex_operator Namespace abstractions Assembly PIKLib.dll enum complex_operator Fields AND = 0 OR = 1"
  },
  "api/abstractions.condition_operator.html": {
    "href": "api/abstractions.condition_operator.html",
    "title": "Enum condition_operator | Cnv API specification",
    "keywords": "Enum condition_operator Namespace abstractions Assembly PIKLib.dll enum condition_operator Fields EQUAL = 0 GREATER = 3 GREATEREQUAL = 5 LESS = 2 LESSEQUAL = 4 NOTEQUAL = 1"
  },
  "api/abstractions.event_name.html": {
    "href": "api/abstractions.event_name.html",
    "title": "Class event_name | Cnv API specification",
    "keywords": "Class event_name Namespace abstractions Assembly PIKLib.dll record event_name : IEquatable<event_name> Inheritance object event_name Implements IEquatable<event_name> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors event_name(string) event_name(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator event_name(string) implicit operator event_name(string s) Parameters s string Returns event_name implicit operator string(event_name) implicit operator string(event_name n) Parameters n event_name Returns string"
  },
  "api/abstractions.expression_operator.html": {
    "href": "api/abstractions.expression_operator.html",
    "title": "Enum expression_operator | Cnv API specification",
    "keywords": "Enum expression_operator Namespace abstractions Assembly PIKLib.dll enum expression_operator Fields ADD = 0 DIV = 3 MOD = 4 MUL = 2 SUB = 1"
  },
  "api/abstractions.html": {
    "href": "api/abstractions.html",
    "title": "Namespace abstractions | Cnv API specification",
    "keywords": "Namespace abstractions Classes BoolVariable DoubleVariable IntVariable LiteralRect OBJECT ReferenceRect StringVariable button_name char_name event_name other_name parameter rect signal_name stringified_tick_number stringified_value variable Enums anchor complex_operator condition_operator expression_operator Delegates SignalHandler A plain non-parametrized signal handler. It can receive an arbitrary number of arguments. SignalHandler<P> A specialized signal handler identified by its parametr. It can receive an arbitrary number of arguments."
  },
  "api/abstractions.other_name.html": {
    "href": "api/abstractions.other_name.html",
    "title": "Class other_name | Cnv API specification",
    "keywords": "Class other_name Namespace abstractions Assembly PIKLib.dll record other_name : IEquatable<other_name> Inheritance object other_name Implements IEquatable<other_name> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors other_name(string) other_name(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator other_name(string) implicit operator other_name(string s) Parameters s string Returns other_name implicit operator string(other_name) implicit operator string(other_name n) Parameters n other_name Returns string"
  },
  "api/abstractions.parameter.html": {
    "href": "api/abstractions.parameter.html",
    "title": "Class parameter | Cnv API specification",
    "keywords": "Class parameter Namespace abstractions Assembly PIKLib.dll record parameter : IEquatable<parameter> Inheritance object parameter Implements IEquatable<parameter> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors parameter(string) parameter(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator parameter(string) implicit operator parameter(string s) Parameters s string Returns parameter implicit operator string(parameter) implicit operator string(parameter n) Parameters n parameter Returns string"
  },
  "api/abstractions.rect.html": {
    "href": "api/abstractions.rect.html",
    "title": "Class rect | Cnv API specification",
    "keywords": "Class rect Namespace abstractions Assembly PIKLib.dll abstract record rect : IEquatable<rect> Inheritance object rect Implements IEquatable<rect> Derived LiteralRect ReferenceRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/abstractions.signal_name.html": {
    "href": "api/abstractions.signal_name.html",
    "title": "Class signal_name | Cnv API specification",
    "keywords": "Class signal_name Namespace abstractions Assembly PIKLib.dll record signal_name : IEquatable<signal_name> Inheritance object signal_name Implements IEquatable<signal_name> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors signal_name(string) signal_name(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator signal_name(string) implicit operator signal_name(string s) Parameters s string Returns signal_name implicit operator string(signal_name) implicit operator string(signal_name n) Parameters n signal_name Returns string"
  },
  "api/abstractions.stringified_tick_number.html": {
    "href": "api/abstractions.stringified_tick_number.html",
    "title": "Class stringified_tick_number | Cnv API specification",
    "keywords": "Class stringified_tick_number Namespace abstractions Assembly PIKLib.dll record stringified_tick_number : IEquatable<stringified_tick_number> Inheritance object stringified_tick_number Implements IEquatable<stringified_tick_number> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors stringified_tick_number(string) stringified_tick_number(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator stringified_tick_number(string) implicit operator stringified_tick_number(string s) Parameters s string Returns stringified_tick_number implicit operator string(stringified_tick_number) implicit operator string(stringified_tick_number n) Parameters n stringified_tick_number Returns string"
  },
  "api/abstractions.stringified_value.html": {
    "href": "api/abstractions.stringified_value.html",
    "title": "Class stringified_value | Cnv API specification",
    "keywords": "Class stringified_value Namespace abstractions Assembly PIKLib.dll record stringified_value : IEquatable<stringified_value> Inheritance object stringified_value Implements IEquatable<stringified_value> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors stringified_value(string) stringified_value(string Value) Parameters Value string Properties Value string Value { get; init; } Property Value string Operators implicit operator stringified_value(string) implicit operator stringified_value(string s) Parameters s string Returns stringified_value implicit operator string(stringified_value) implicit operator string(stringified_value n) Parameters n stringified_value Returns string"
  },
  "api/abstractions.variable.html": {
    "href": "api/abstractions.variable.html",
    "title": "Class variable | Cnv API specification",
    "keywords": "Class variable Namespace abstractions Assembly PIKLib.dll abstract record variable : IEquatable<variable> Inheritance object variable Implements IEquatable<variable> Derived BoolVariable DoubleVariable IntVariable StringVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Cnv API specification",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Cnv API specification",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Cnv API specification",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}